<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PostsMapper">

<!-- list 화면 출력 및 페이징 관련 SQL문 -->
<!--  <select id="selectList" resultType="Posts">
	select * from Posts where posttype = 'undeleted'
</select> -->

<!-- list 화면 출력 및 페이징 관련 SQL문 -->
 <select id="selectList" resultType="Posts">
	select * from Posts
	where PostType = 'undeleted'
</select>

<!-- mypage list 화면 출력 및 페이징 관련 SQL문 -->
 <select id="selectList2" resultType="Posts" parameterType="String">
	select * from Posts 
		 where AUTHORID = #{userID}
</select>

<!-- 특정 페이징 getTotalCount -->
<select id="getTotalCount" parameterType="map" resultType="int">
 	<choose>
    	<when test="order == '좋아요 누른 글'">
        	SELECT COUNT(*) FROM Posts
			INNER JOIN LIKES ON likes.categoryid = posts.postid AND likes.categories = 'posts'
			WHERE likes.userid =  #{UserID}
    	</when>
    	<otherwise>
        	SELECT COUNT(*) FROM Posts WHERE AUTHORID = #{UserID}
    	</otherwise>
    </choose>
</select>

<select id="selectgetList" parameterType="String" resultType="Posts">
	SELECT * FROM Posts WHERE AUTHORID = #{userID}
</select>

<!-- 카테고리 totalCount -->
<select id="totalCount" parameterType="map" resultType="int">
      select count(*)
      from Posts
		<!-- 카테고리 select -->
			<if test="order == 'All' ">
    			where posttype = 'undeleted' order by CreationTime desc
   			</if>
    		<if test="order == 'Popular' ">
    			where posttype = 'undeleted' order by Likes desc
    		</if>
    		<if test="order == 'QnA' ">
    		 	where posttype = 'undeleted' and Category = 'QnA' 
    		</if>
</select>

<!-- 카테고리 totalCount -->
<!-- <select id="totalCount" parameterType="map" resultType="int">
      select count(*)
      from Posts
		카테고리 select
			<if test="order == '전체' ">
    			order by CreationTime desc
   			</if>
    		<if test="order == '인기게시물' ">
    			order by Likes desc
    		</if>
    		<if test="order == 'QnA' ">
    		 	where Category = 'QnA' 
    		</if>
</select> -->


<!-- 카테고리 SelectAll -->
<select id="selectOrder" parameterType="map" resultType="Posts">
	  select *	from posts
    	<if test="order == 'All' ">
    		where POSTTYPE = 'undeleted' order by CreationTime DESC
    	</if>
    	<if test="order == 'Popular' ">
    		where POSTTYPE = 'undeleted' order by Likes DESC
    	</if>
    	<if test="order == 'QnA'">
    		 where POSTTYPE = 'undeleted' and Category = 'QnA' 
    	</if>
</select>

<select id="selectOrder2" parameterType="map" resultType="Posts">
	    SELECT *
	    FROM posts
	    WHERE AUTHORID = #{userID}
	    <if test="order == '좋아요 누른 글' ">
    		
    	</if>
</select>


<select id="selectOrder3" parameterType="hashmap" resultType="Posts">
SELECT * FROM Posts
			INNER JOIN LIKES ON likes.categoryid = posts.postid AND likes.categories = 'posts'
			WHERE likes.userid =  #{userID}
</select> 

<!-- 검색조건 TotalCount -->
<select id="selectTotalCount" parameterType="map" resultType="int">
      select count(*)
      from Posts
        <!-- 검색기능 -->
      	<where>
			<if test="search != null">
			posttype = 'undeleted' and title like '%'||#{search}||'%' or content like '%'||#{search}||'%'
			</if>
		</where>
</select>

<!-- 검색조건 TotalCount -->
<!-- <select id="selectTotalCount" parameterType="map" resultType="int">
      select count(*)
      from Posts
        검색기능
      	<where>
			<if test="search != null">
			title like '%'||#{search}||'%' or content like '%'||#{search}||'%'
			</if>
		</where>
</select> -->

<!-- 검색조건 SelectAll -->
<select id="selectSearch" parameterType="map" resultType="Posts">
	  select * from posts
    <where>
    	<if test="search != null">
    		posttype = 'undeleted' and title like '%'||#{search}||'%' or content like '%'||#{search}||'%'
    	</if>
    </where>
</select>


<!-- 검색조건 SelectAll -->
<!-- <select id="selectSearch" parameterType="map" resultType="com.dto.PostsDTO">
	  select * from posts
    <where>
    	<if test="search != null">
    		title like '%'||#{search}||'%' or content like '%'||#{search}||'%'
    	</if>
    </where>
</select> -->



<select id="popular" resultType="Posts">
 <![CDATA[
SELECT *
FROM (
  SELECT *
  FROM posts
  WHERE CREATIONTIME >= SYSDATE - INTERVAL '2' DAY 
    AND CREATIONTIME < SYSDATE
    ORDER BY NVL(likes, 0) DESC
)
WHERE ROWNUM <= 5 AND POSTTYPE = 'undeleted'

    ]]>
</select>

<insert id="addPost" parameterType="Posts">
  <selectKey keyProperty="PostID" resultType="int" order="AFTER">
    SELECT Posts_PostID_SEQ.currval FROM DUAL 
  </selectKey>
  
INSERT INTO posts(postid, authorid, title, tag, content,
                  creationtime, updatetime, posttype)
VALUES (Posts_PostID_SEQ.nextval, #{AuthorID}, #{Title}, #{Tag},
        #{Content}, sysdate, sysdate,'undeleted')
</insert>


<update id="updateContent" parameterType="Posts">
		UPDATE posts SET content= #{Content} , tag=#{Tag}, title=#{Title} WHERE PostID = #{PostID}
</update> 


<!-- 제목 클릭시 상세페이지 이동 -->
   <select id="Posts_read" parameterType="int" resultType="Posts">
		SELECT	PostID
			  , AuthorID
			  , Title
			  , Tag
			  , Content
			  , TO_CHAR(CreationTime, 'yy.mm.dd hh24:mi:ss') CreationTime
			  , UpdateTime
			  , Likes
			  , Category
			  , Image
			  , Hit
		 FROM posts
		 WHERE PostID = #{PostID}
	</select> 
	
	<!-- 조회수 -->
	<update id="Posts_hitadd" parameterType="Posts">
		UPDATE posts SET Hit=Hit+1 WHERE PostID = #{PostID}
	</update> 
	
	<!-- 삭제버튼 클릭 시 게시물리스트에서는 사라지고 컬럼값 'deleted'로 변경 -->
	<update id="Posts_delete" parameterType="Posts">
		  UPDATE posts SET PostType = 'deleted' WHERE PostID = #{PostID}
	</update> 

	<update id="likeUpdate" parameterType="map">
		UPDATE posts SET Likes = #{Likes} where PostID = #{PostID}
	</update>


 
</mapper>